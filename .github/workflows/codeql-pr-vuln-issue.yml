      - name: Check for vulnerabilities and create issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail

          PR_NUM="${{ github.event.pull_request.number }}"
          PR_HEAD_BRANCH="${{ github.event.pull_request.head.ref }}"
          PR_REF="refs/heads/${PR_HEAD_BRANCH}"

          # Fetch ONLY alerts for this PR's head branch, from CodeQL, currently open
          gh api \
            -H "Accept: application/vnd.github+json" \
            -f ref="$PR_REF" \
            -f tool_name="CodeQL" \
            -f state="open" \
            repos/${{ github.repository }}/code-scanning/alerts > codeql_alerts.json

          # Filter: exclude GitHub Actions hygiene (rule ids starting with "actions/")
          # Optional: keep only HIGH/CRITICAL severities
jq '
  map(select(.rule.id | startswith("actions/") | not))
  | map(select(.rule.security_severity_level == "low"
            or .rule.security_severity_level == "medium"
            or .rule.security_severity_level == "high"))
' codeql_alerts.json > filtered_alerts.json

          NUM_ALERTS=$(jq 'length' filtered_alerts.json)

          if [ "$NUM_ALERTS" -gt 0 ]; then
            ALERT_LINES=$(jq -r '.[] | "* \(.rule.id): \(.most_recent_instance.message.text)"' filtered_alerts.json)

            # De-dup: donâ€™t open a new issue if one for this PR already exists
            EXISTING=$(gh issue list --state open --search "in:title CodeQL detected .* PR #$PR_NUM" --json number --jq '.[0].number // empty')
            if [ -n "$EXISTING" ]; then
              gh issue comment "$EXISTING" --body "Updated scan results:\n\n$ALERT_LINES"
            else
              gh issue create \
                --title "CodeQL detected $NUM_ALERTS vulnerability(ies) in PR #$PR_NUM" \
                --body "CodeQL scan found the following vulnerabilities in this pull request:\n\n$ALERT_LINES\n\nSee the Security tab for details." \
                --label "Vulnerability Found"
            fi
          else
            echo "No qualifying CodeQL vulnerabilities for PR branch $PR_REF."
          fi
