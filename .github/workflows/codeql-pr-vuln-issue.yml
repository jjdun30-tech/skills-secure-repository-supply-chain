name: Create Issue on CodeQL Alert

on:
  code_scanning_alert:
    types: [created, reopened, appeared_in_branch]

permissions:
  contents: read
  security-events: read
  issues: write

jobs:
  open_issue_for_alert:
    runs-on: ubuntu-latest
    steps:
      - name: Open/label issue for PR branch CodeQL alerts
        uses: actions/github-script@v7
        with:
          script: |
            const alert = context.payload.alert;
            if (!alert) return;

            // Only alerts produced by CodeQL
            if ((alert.tool && alert.tool.name) !== 'CodeQL') return;

            // Ignore Actions hygiene rules if you want
            if (alert.rule?.id?.startsWith('actions/')) return;

            // Keep low/medium/high/critical severities (skip "note"/null)
            const sev = (alert.rule?.security_severity_level || '').toLowerCase();
            const keep = ['low','medium','high','critical'].includes(sev);
            if (!keep) return;

            // Only create issues for alerts that relate to a PR’s head ref when present
            // If there is an associated PR, GitHub includes it in alert.most_recent_instance?.ref as refs/pull/<n>/merge
            // We’ll still open an issue regardless, but you could filter further if desired.

            const number = alert.number;           // unique alert number in repo
            const ruleId = alert.rule?.id || 'unknown-rule';
            const title = `[CodeQL] Alert #${number}: ${ruleId} (${sev || 'unknown'})`;

            // Avoid duplicates
            const existing = await github.rest.search.issuesAndPullRequests({
              q: `repo:${context.repo.owner}/${context.repo.repo} is:issue in:title "${title}"`
            });
            if (existing.data.total_count > 0) return;

            const body = [
              `**Rule:** \`${ruleId}\``,
              `**Severity:** ${sev || 'unknown'}`,
              alert.html_url ? `**Alert:** ${alert.html_url}` : '',
              '',
              'Automatically opened for tracking. Link fixing PRs here.'
            ].filter(Boolean).join('\n');

            const created = await github.rest.issues.create({
              ...context.repo,
              title,
              body,
              labels: ['Vulnerability Found']
            });

            core.notice(`Opened issue #${created.data.number} for CodeQL alert #${number}.`);
